name: Release

on:
  workflow_dispatch:

jobs:
  check-ci-status:
    runs-on: ubuntu-latest
    outputs:
      can-release: ${{ steps.check.outputs.result }}
    steps:
      - name: Check CI status on main
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            if (context.ref !== 'refs/heads/main') {
              core.setFailed('Release can only be run on main branch');
              return false;
            }
            
            const { data: runs } = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ci.yml',
              branch: 'main',
              status: 'completed',
              per_page: 1
            });
            
            if (runs.total_count === 0) {
              core.setFailed('No CI runs found on main branch');
              return false;
            }
            
            const latestRun = runs.workflow_runs[0];
            if (latestRun.conclusion !== 'success') {
              core.setFailed(`Latest CI run on main failed: ${latestRun.conclusion}`);
              return false;
            }
            
            console.log(`Latest CI run passed: ${latestRun.html_url}`);
            return true;

  release:
    runs-on: ubuntu-latest
    needs: check-ci-status
    if: ${{ needs.check-ci-status.outputs.can-release == 'true' }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        run: npx semantic-release
